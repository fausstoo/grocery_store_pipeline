name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  check-database-connection:
    runs-on: ubuntu-latest
    steps:
      - name: Check Database Connection
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
        run: |
          if mysql -h ${{ secrets.DB_HOST }} -u ${{ secrets.DB_USERNAME }} -p"${{ secrets.DB_PASSWORD }}" -P ${{ secrets.DB_PORT }} ${{ secrets.DB_DATABASE }} -e "SELECT 1"; then
            echo "Database connection successful."
          else
            echo "Database connection failed."
            exit 1
          fi

        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

  containerize-pipeline:
    needs: check-database-connection
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ETL Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: fausstoo/grocery_store_pipeline:latest

  run-etl-pipeline:
    needs: containerize-pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Run ETL process in Docker container
        run: docker run --rm etl-image python /grocery_store_pipeline/src/components/pipeline.py